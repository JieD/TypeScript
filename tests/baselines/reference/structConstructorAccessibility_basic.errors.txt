tests/cases/conformance/basicStructs/constructorDeclarations_basic/structConstructorAccessibility_basic.ts(8,5): error TS1089: 'private' modifier cannot appear on a constructor declaration.
tests/cases/conformance/basicStructs/constructorDeclarations_basic/structConstructorAccessibility_basic.ts(12,5): error TS1089: 'protected' modifier cannot appear on a constructor declaration.
tests/cases/conformance/basicStructs/constructorDeclarations_basic/structConstructorAccessibility_basic.ts(25,9): error TS1089: 'private' modifier cannot appear on a constructor declaration.
tests/cases/conformance/basicStructs/constructorDeclarations_basic/structConstructorAccessibility_basic.ts(29,9): error TS1089: 'protected' modifier cannot appear on a constructor declaration.


==== tests/cases/conformance/basicStructs/constructorDeclarations_basic/structConstructorAccessibility_basic.ts (4 errors) ====
    // Only public constructors are supported. Private and protected constructors result in an error
    
    struct C {
        public constructor(public x: number) { }
    }
    
    struct D {
        private constructor(public x: number) { } // error
        ~~~~~~~
!!! error TS1089: 'private' modifier cannot appear on a constructor declaration.
    }
    
    struct E {
        protected constructor(public x: number) { } // error
        ~~~~~~~~~
!!! error TS1089: 'protected' modifier cannot appear on a constructor declaration.
    }
    
    var c = new C(1);
    var d = new D(1);
    var e = new E(1);
    
    module Generic {
        struct C<T> {
            public constructor(public x: T) { }
        }
    
        struct D<T> {
            private constructor(public x: T) { } // error
            ~~~~~~~
!!! error TS1089: 'private' modifier cannot appear on a constructor declaration.
        }
    
        struct E<T> {
            protected constructor(public x: T) { } // error
            ~~~~~~~~~
!!! error TS1089: 'protected' modifier cannot appear on a constructor declaration.
        }
    
        var c = new C(1);
        var d = new D(1);
        var e = new E(1);
    }
    