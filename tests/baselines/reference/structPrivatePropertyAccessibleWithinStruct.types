=== tests/cases/conformance/structs/members/accessibilityAndAccessor/structPrivatePropertyAccessibleWithinStruct.ts ===
// doc 2.2
// private property members can be accessed only within the struct body that contains their declaration
// no errors

struct C {
>C : C

    private x: string;
>x : string

    private foo() { return this.foo; }
>foo : () => any
>this.foo : () => any
>this : C
>foo : () => any

    private static x: string;
>x : string

    private static foo() { return this.foo; }
>foo : () => typeof C.foo
>this.foo : () => typeof C.foo
>this : typeof C
>foo : () => typeof C.foo

    private static bar() { this.foo(); }
>bar : () => void
>this.foo() : () => typeof C.foo
>this.foo : () => typeof C.foo
>this : typeof C
>foo : () => typeof C.foo
}

// added level of function nesting
struct C2 {
>C2 : C2

    private x: string;
>x : string

    private foo() { () => this.foo; }
>foo : () => void
>() => this.foo : () => () => void
>this.foo : () => void
>this : C2
>foo : () => void

    private static x: string;
>x : string

    private static foo() { () => this.foo; }
>foo : () => void
>() => this.foo : () => () => void
>this.foo : () => void
>this : typeof C2
>foo : () => void

    private static bar() { () => this.foo(); }
>bar : () => void
>() => this.foo() : () => void
>this.foo() : void
>this.foo : () => void
>this : typeof C2
>foo : () => void
}

