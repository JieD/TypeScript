=== tests/cases/conformance/structs/members/instanceAndStaticMembers/structTypeOfThisInInstanceMember2.ts ===
struct C<T> {
>C : C<T>
>T : T

    x = this;
>x : C<T>
>this : C<T>

    foo() {
>foo : () => C<T>

        return this;
>this : C<T>
    }
    constructor(x: T) {
>x : T
>T : T

        var t = this;
>t : C<T>
>this : C<T>

        t.x;
>t.x : C<T>
>t : C<T>
>x : C<T>

        t.z;
>t.z : T
>t : C<T>
>z : T

        var r = t.foo();
>r : C<T>
>t.foo() : C<T>
>t.foo : () => C<T>
>t : C<T>
>foo : () => C<T>
    }
    z: T;
>z : T
>T : T
}

var c: C<string>;
>c : C<string>
>C : C<T>

// all ok
var r = c.x;
>r : C<string>
>c.x : C<string>
>c : C<string>
>x : C<string>

var ra = c.x.x.x;
>ra : C<string>
>c.x.x.x : C<string>
>c.x.x : C<string>
>c.x : C<string>
>c : C<string>
>x : C<string>
>x : C<string>
>x : C<string>

var r3 = c.foo();
>r3 : C<string>
>c.foo() : C<string>
>c.foo : () => C<string>
>c : C<string>
>foo : () => C<string>

var r4 = c.z;
>r4 : string
>c.z : string
>c : C<string>
>z : string

var rs = [r, r3];
>rs : C<string>[]
>[r, r3] : C<string>[]
>r : C<string>
>r3 : C<string>

rs.forEach(x => {
>rs.forEach(x => {    x.foo;    x.x;    x.z;}) : void
>rs.forEach : (callbackfn: (value: C<string>, index: number, array: C<string>[]) => void, thisArg?: any) => void
>rs : C<string>[]
>forEach : (callbackfn: (value: C<string>, index: number, array: C<string>[]) => void, thisArg?: any) => void
>x => {    x.foo;    x.x;    x.z;} : (x: C<string>) => void
>x : C<string>

    x.foo;
>x.foo : () => C<string>
>x : C<string>
>foo : () => C<string>

    x.x;
>x.x : C<string>
>x : C<string>
>x : C<string>

    x.z;
>x.z : string
>x : C<string>
>z : string

});
