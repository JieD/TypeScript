=== tests/cases/conformance/structs/members/inheritanceAndOverriding/derivedStructOverrideInstanceFunctionMembers.ts ===
// doc 2.3
// derived struct can override base struct's instance function members

var x: { foo: string; }
>x : { foo: string; }
>foo : string

var y: { foo: string; bar: string; }
>y : { foo: string; bar: string; }
>foo : string
>bar : string

struct Base {
>Base : Base

    a: typeof x;
>a : { foo: string; }
>x : { foo: string; }

    b(a: typeof x) { }
>b : (a: { foo: string; }) => void
>a : { foo: string; }
>x : { foo: string; }

    constructor(a: typeof x) { }
>a : { foo: string; }
>x : { foo: string; }
}

struct Derived extends Base {
>Derived : Derived
>Base : Base

    b(a: typeof y) { return 1; } // ok
>b : (a: { foo: string; bar: string; }) => number
>a : { foo: string; bar: string; }
>y : { foo: string; bar: string; }

    constructor(a: typeof y) { super(x) }
>a : { foo: string; bar: string; }
>y : { foo: string; bar: string; }
>super(x) : void
>super : typeof Base
>x : { foo: string; }
}


/* struct Base2 {
    [i: string]: Object;
    [i: number]: typeof x;
}

struct Derived2 extends Base2 {
    [i: string]: typeof x;
    [i: number]: typeof y;
}

var d2: Derived2;
var r7 = d2[''];
var r8 = d2[1]; */


