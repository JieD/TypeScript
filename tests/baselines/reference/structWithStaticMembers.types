=== tests/cases/conformance/structs/members/constructorFunctionTypes/structWithStaticMembers.ts ===
// doc 2.5
// ok

struct C {
>C : C

    static fn() { return this; }
>fn : () => typeof C
>this : typeof C

    constructor(public a: number, private b: number) { }
>a : number
>b : number

    static foo: string; 
>foo : string
}

var r = C.fn();
>r : typeof C
>C.fn() : typeof C
>C.fn : () => typeof C
>C : typeof C
>fn : () => typeof C

var r2 = r.foo;
>r2 : string
>r.foo : string
>r : typeof C
>foo : string

struct D extends C {
>D : D
>C : C

    bar: string;
>bar : string
}

var r = D.fn();
>r : typeof C
>D.fn() : typeof C
>D.fn : () => typeof C
>D : typeof D
>fn : () => typeof C

var r2 = r.foo;
>r2 : string
>r.foo : string
>r : typeof C
>foo : string

