tests/cases/conformance/structs/structPropertyMemberDeclarations/structInstancePropertyAndFunctionWithSameName.ts(7,5): error TS2300: Duplicate identifier 'x'.
tests/cases/conformance/structs/structPropertyMemberDeclarations/structInstancePropertyAndFunctionWithSameName.ts(8,5): error TS2300: Duplicate identifier 'x'.
tests/cases/conformance/structs/structPropertyMemberDeclarations/structInstancePropertyAndFunctionWithSameName.ts(14,5): error TS2300: Duplicate identifier 'x'.
tests/cases/conformance/structs/structPropertyMemberDeclarations/structInstancePropertyAndFunctionWithSameName.ts(15,5): error TS2300: Duplicate identifier 'x'.
tests/cases/conformance/structs/structPropertyMemberDeclarations/structInstancePropertyAndFunctionWithSameName.ts(19,5): error TS2300: Duplicate identifier 'x'.
tests/cases/conformance/structs/structPropertyMemberDeclarations/structInstancePropertyAndFunctionWithSameName.ts(20,25): error TS2300: Duplicate identifier 'x'.


==== tests/cases/conformance/structs/structPropertyMemberDeclarations/structInstancePropertyAndFunctionWithSameName.ts (6 errors) ====
    // doc 4
    // Instance property member declarations declare properties in the struct instance type,
    // and must specify names that are unique among all instance property member
    // and parameter property declarations in the containing struct.
    
    struct C {
        x: number;
        ~
!!! error TS2300: Duplicate identifier 'x'.
        x() { // error
        ~
!!! error TS2300: Duplicate identifier 'x'.
            return 1;
        }
    }
    
    struct D {
        x: number;
        ~
!!! error TS2300: Duplicate identifier 'x'.
        x(v) { } // error
        ~
!!! error TS2300: Duplicate identifier 'x'.
    }
    
    struct E {
        x: number;
        ~
!!! error TS2300: Duplicate identifier 'x'.
        constructor(private x: string) {}
                            ~
!!! error TS2300: Duplicate identifier 'x'.
    }