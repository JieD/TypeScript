tests/cases/conformance/structs/constructorDeclarations/structSuperCalls/derivedStructSuperCallsWithThisArg.ts(11,15): error TS2345: Argument of type 'Derived' is not assignable to parameter of type 'any'.
tests/cases/conformance/structs/constructorDeclarations/structSuperCalls/derivedStructSuperCallsWithThisArg.ts(17,15): error TS2332: 'this' cannot be referenced in current location.
tests/cases/conformance/structs/constructorDeclarations/structSuperCalls/derivedStructSuperCallsWithThisArg.ts(17,15): error TS2345: Argument of type 'Derived2' is not assignable to parameter of type 'any'.
tests/cases/conformance/structs/constructorDeclarations/structSuperCalls/derivedStructSuperCallsWithThisArg.ts(23,21): error TS2332: 'this' cannot be referenced in current location.


==== tests/cases/conformance/structs/constructorDeclarations/structSuperCalls/derivedStructSuperCallsWithThisArg.ts (4 errors) ====
    // doc 3.2
    // it is a compile-time error for argument expressions to reference this.
    
    struct Base {
        x: string;
        constructor(a) { }
    }
    
    struct Derived extends Base {
        constructor() {
            super(this); // ok
                  ~~~~
!!! error TS2345: Argument of type 'Derived' is not assignable to parameter of type 'any'.
        }
    }
    
    struct Derived2 extends Base {
        constructor(public a: string) {
            super(this); // error, 'this' cannot be referenced in current location
                  ~~~~
!!! error TS2332: 'this' cannot be referenced in current location.
                  ~~~~
!!! error TS2345: Argument of type 'Derived2' is not assignable to parameter of type 'any'.
        }
    }
    
    struct Derived3 extends Base {
        constructor(public a: string) {
            super(() => this); // error, 'this' cannot be referenced in current location
                        ~~~~
!!! error TS2332: 'this' cannot be referenced in current location.
        }
    }
    
    struct Derived4 extends Base {
        constructor(public a: string) {
            super(function () { return this; }); // ok
        }
    }